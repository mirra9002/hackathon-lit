import { useState } from "react";

export default function KyivRus() {
  const [step, setStep] = useState(1);

  const handleNext = () => {
    setStep((prev) => prev + 1);
  };

  return (
    <div className="min-h-screen w-full bg-gradient-to-b from-amber-50 to-amber-100 overflow-auto flex flex-col items-center">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center py-6 px-4">
        <h1 className="text-4xl md:text-5xl font-bold text-gray-800 mb-3">–ö–∏—ó–≤—Å—å–∫–∞ –†—É—Å—å</h1>
        <p className="text-lg md:text-xl text-gray-700 max-w-3xl mx-auto">
          –ï–ø–æ—Ö–∞ –º–æ–≥—É—Ç–Ω—ñ—Ö –∫–Ω—è–∑—ñ–≤ —Ç–∞ –≤—ñ–¥–≤–∞–∂–Ω–∏—Ö –≤–æ—ó–Ω—ñ–≤, –∫–æ–ª–∏ —Ñ–æ—Ä–º—É–≤–∞–ª–∞—Å—è —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –¥–µ—Ä–∂–∞–≤–Ω—ñ—Å—Ç—å
        </p>
      </div>

      {/* –¢–µ—Å—Ç–∏ –ø–æ —á–µ—Ä–∑—ñ */}
      {step === 1 && (
        <HistoryTest
          question="–•—Ç–æ –æ–±‚Äô—î–¥–Ω–∞–≤ –ì–∞–ª–∏—á–∏–Ω—É —Ç–∞ –í–æ–ª–∏–Ω—å —É 1199 —Ä–æ—Ü—ñ?"
          options={["–†–æ–º–∞–Ω –ú—Å—Ç–∏—Å–ª–∞–≤–∏—á", "–î–∞–Ω–∏–ª–æ –†–æ–º–∞–Ω–æ–≤–∏—á", "–Æ—Ä—ñ–π-–ë–æ–ª–µ—Å–ª–∞–≤", "–ö–∞–∑–∏–º–∏—Ä III"]}
          correctAnswer="–†–æ–º–∞–Ω –ú—Å—Ç–∏—Å–ª–∞–≤–∏—á"
          onNext={handleNext}
        />
      )}

      {step === 2 && (
        <HistoryTest
          question="–Ø–∫–∞ —Ä–µ—Ñ–æ—Ä–º–∞ –ø—ñ–¥–∫—Ä–µ—Å–ª—é–≤–∞–ª–∞ —î–¥–Ω—ñ—Å—Ç—å –Ω–æ–≤–æ—ó –¥–µ—Ä–∂–∞–≤–∏?"
          options={[
            "–Ñ–¥–∏–Ω—ñ —Å—É–¥ —ñ –ø–æ–¥–∞—Ç–æ–∫",
            "–û–∫—Ä–µ–º—ñ –º–∏—Ç–∞ –≤ –∫–æ–∂–Ω–æ–º—É –º—ñ—Å—Ç—ñ",
            "–ó–∞–ø—Ä–æ–≤–∞–¥–∂–µ–Ω–Ω—è –ª–∞—Ç–∏–Ω—Å—å–∫–æ–≥–æ –æ–±—Ä—è–¥—É",
            "–í—ñ–¥–º–æ–≤–∞ –≤—ñ–¥ —Ç–æ—Ä–≥—ñ–≤–ª—ñ –∑ –ö—Ä–∞–∫–æ–≤–æ–º",
          ]}
          correctAnswer="–Ñ–¥–∏–Ω—ñ —Å—É–¥ —ñ –ø–æ–¥–∞—Ç–æ–∫"
          onNext={handleNext}
        />
      )}

      {step === 3 && (
        <HistoryTest
          question="–ß–æ–º—É —á–∞—Å—Ç–∏–Ω–∞ –±–æ—è—Ä –≤–∏—Å—Ç—É–ø–∞–ª–∞ –ø—Ä–æ—Ç–∏ –†–æ–º–∞–Ω–∞?"
          options={[
            "–í—ñ–Ω —Å–∫–æ—Ä–æ—á—É–≤–∞–≤ —ó—Ö–Ω—ñ –≤–æ—Ç—á–∏–Ω–∏ —Ç–∞ –≤–ø–ª–∏–≤",
            "–í—ñ–Ω –≤—ñ–¥–º–æ–≤–∏–≤—Å—è –≤—ñ–¥ –æ–±–æ—Ä–æ–Ω–∏ –∫–æ—Ä–¥–æ–Ω—ñ–≤",
            "–í—ñ–Ω –ø—ñ–¥–≤–∏—â–∏–≤ –º–∏—Ç–∞ –¥–ª—è –∫—É–ø—Ü—ñ–≤",
            "–í—ñ–Ω –ø–µ—Ä–µ–Ω—ñ—Å —Å—Ç–æ–ª–∏—Ü—é –¥–æ –ö–∏—î–≤–∞",
          ]}
          correctAnswer="–í—ñ–Ω —Å–∫–æ—Ä–æ—á—É–≤–∞–≤ —ó—Ö–Ω—ñ –≤–æ—Ç—á–∏–Ω–∏ —Ç–∞ –≤–ø–ª–∏–≤"
          onNext={handleNext}
        />
      )}

      {step === 4 && (
        <HistoryTest
          question="–Ø–∫—É –ø–æ–∑–∏—Ü—ñ—é —â–æ–¥–æ –≤—ñ—Ä–∏ –æ–∑–≤—É—á–∏–≤ –î–∞–Ω–∏–ª–æ, –ø—Ä–∏–π–º–∞—é—á–∏ –∫–æ—Ä–æ–Ω—É?"
          options={[
            "–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–∞–≤–æ—Å–ª–∞–≤‚Äô—è",
            "–ü–µ—Ä–µ—Ö—ñ–¥ –Ω–∞ –ª–∞—Ç–∏–Ω—Å—å–∫–∏–π –æ–±—Ä—è–¥",
            "–ó–º—ñ—à–∞–Ω–∏–π –æ–±—Ä—è–¥",
            "–í—ñ–¥–º–æ–≤–∞ –≤—ñ–¥ –±—É–¥—å-—è–∫–æ–≥–æ –æ–±—Ä—è–¥—É",
          ]}
          correctAnswer="–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ø—Ä–∞–≤–æ—Å–ª–∞–≤‚Äô—è"
          onNext={handleNext}
        />
      )}

      {step === 5 && (
        <HistoryTest
          question="–Ø–∫–∏–π –ø—Ä–∞–∫—Ç–∏—á–Ω–∏–π —Å–µ–Ω—Å –î–∞–Ω–∏–ª–æ –≤–±–∞—á–∞–≤ —É –∫–æ—Ä–æ–Ω—ñ?"
          options={[
            "–í—ñ–¥–∫—Ä–∏—Ç—Ç—è –¥–≤–µ—Ä–µ–π –¥–ª—è —Ç–æ—Ä–≥—ñ–≤ —ñ –¥–∏–ø–ª–æ–º–∞—Ç—ñ—ó",
            "–õ–∏—à–µ —Å–∏–º–≤–æ–ª—ñ—á–Ω–∞ –ø–µ—Ä–µ–º–æ–≥–∞",
            "–ú–æ–∂–ª–∏–≤—ñ—Å—Ç—å –Ω–µ –±—É–¥—É–≤–∞—Ç–∏ —É–∫—Ä—ñ–ø–ª–µ–Ω–Ω—è",
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø—Ä–∏—Ö—ñ–¥ —Ö—Ä–µ—Å—Ç–æ–Ω–æ—Å—Ü—ñ–≤",
          ]}
          correctAnswer="–í—ñ–¥–∫—Ä–∏—Ç—Ç—è –¥–≤–µ—Ä–µ–π –¥–ª—è —Ç–æ—Ä–≥—ñ–≤ —ñ –¥–∏–ø–ª–æ–º–∞—Ç—ñ—ó"
          onNext={handleNext}
        />
      )}

      {step === 6 && (
        <HistoryTest
          question="–Ø–∫–∏–π –≥–æ–ª–æ–≤–Ω–∏–π –≤–∏—Å–Ω–æ–≤–æ–∫ –î–∞–Ω–∏–ª–∞ –ø—ñ—Å–ª—è –≤—ñ–¥—Å—É—Ç–Ω–æ—Å—Ç—ñ –æ–±—ñ—Ü—è–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏?"
          options={[
            "–°–ø–∏—Ä–∞—Ç–∏—Å—è –Ω–∞ –≤–ª–∞—Å–Ω—ñ —Å–∏–ª–∏",
            "–ü–æ–≤–µ—Ä–Ω—É—Ç–∏ –∫–æ—Ä–æ–Ω—É",
            "–ó–∞–ª–µ–∂–∞—Ç–∏ –≤—ñ–¥ —Å—É—Å—ñ–¥—ñ–≤",
            "–ü–µ—Ä–µ—Å–µ–ª–∏—Ç–∏ –Ω–∞—Å–µ–ª–µ–Ω–Ω—è –Ω–∞ –ó–∞—Ö—ñ–¥",
          ]}
          correctAnswer="–°–ø–∏—Ä–∞—Ç–∏—Å—è –Ω–∞ –≤–ª–∞—Å–Ω—ñ —Å–∏–ª–∏"
          onNext={handleNext}
        />
      )}

      {step > 6 && (
        <p className="mt-12 text-2xl font-semibold text-gray-800 text-center">
          üéâ –í—ñ—Ç–∞—î–º–æ! –í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–∏–ª–∏ —Ä–æ–∑–¥—ñ–ª <span className="text-amber-700">¬´–ö–∏—ó–≤—Å—å–∫–∞ –†—É—Å—å¬ª</span>!
        </p>
      )}
    </div>
  );
}

/* ===============================
   Reusable –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ç–µ—Å—Ç—É
   =============================== */
function HistoryTest({ question, options, correctAnswer, onNext }) {
  const [selected, setSelected] = useState("");
  const [result, setResult] = useState(null);

  const handleSubmit = (e) => {
    e.preventDefault();
    if (selected === correctAnswer) {
      setResult("correct");
    } else {
      setResult("wrong");
    }
  };

  return (
    <div className="mt-6 mb-10 w-[90%] sm:w-[80%] md:w-[60%] bg-white/90 backdrop-blur-sm rounded-2xl p-6 md:p-8 shadow-xl">
      <h2 className="text-xl md:text-2xl font-bold text-gray-800 mb-5 text-center">
        {question}
      </h2>

      <form onSubmit={handleSubmit} className="space-y-4">
        {options.map((option, index) => (
          <div key={index} className="flex items-center">
            <input
              id={`option-${index}`}
              type="radio"
              value={option}
              name={question}
              checked={selected === option}
              onChange={(e) => setSelected(e.target.value)}
              className="w-5 h-5 text-amber-600 bg-gray-100 border-gray-300 focus:ring-amber-500"
            />
            <label
              htmlFor={`option-${index}`}
              className="ms-3 text-base md:text-lg font-medium text-gray-900"
            >
              {option}
            </label>
          </div>
        ))}

        {/* –ö–Ω–æ–ø–∫–∞ "–í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏" */}
        <button
          type="submit"
          disabled={!selected}
          className={`mt-6 w-full py-3 rounded-xl font-semibold text-white transition ${
            selected
              ? "bg-amber-600 hover:bg-amber-700"
              : "bg-gray-400 cursor-not-allowed"
          }`}
        >
          –í—ñ–¥–ø–æ–≤—ñ—Å—Ç–∏
        </button>
      </form>

      {/* –†–µ–∑—É–ª—å—Ç–∞—Ç */}
      {result === "correct" && (
        <div className="text-center mt-6">
          <p className="text-green-600 text-lg font-semibold mb-4">–ü—Ä–∞–≤–∏–ª—å–Ω–æ!</p>
          <button
            onClick={onNext}
            className="px-6 py-2 bg-amber-600 text-white rounded-xl hover:bg-amber-700 transition font-medium"
          >
            –ù–∞—Å—Ç—É–ø–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è ‚ûú
          </button>
        </div>
      )}
      {result === "wrong" && (
        <p className="mt-6 text-red-600 text-lg font-semibold text-center">
          –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑!
        </p>
      )}
    </div>
  );
}
